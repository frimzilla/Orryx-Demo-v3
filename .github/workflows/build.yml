name: EAS Build and QR Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Validate package.json
        run: |
          node -e "const fs=require('fs');try{JSON.parse(fs.readFileSync('package.json','utf8'));console.log('package.json OK ‚úÖ')}catch(e){console.error('‚ùå Invalid package.json:',e.message);process.exit(1)}"

      - name: Install dependencies
        run: npm install --silent

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Verify EXPO_TOKEN secret
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "::error ::‚ùå EXPO_TOKEN secret is missing. Add it under Settings ‚Üí Secrets ‚Üí Actions."
            exit 1
          else
            echo "‚úÖ EXPO_TOKEN detected. Proceeding with build."
          fi

      - name: Run EAS Build (Android, profile=internal)
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          eas --version
          eas build -p android --profile internal --non-interactive --json | tee eas-build.json

      - name: Extract EAS build URL
        run: |
          node <<'NODE'
          const fs = require('fs');
          let url = '';
          try {
            const txt = fs.readFileSync('eas-build.json','utf8').trim();
            if (!txt) throw new Error('empty eas-build.json (build likely failed earlier)');
            const j = JSON.parse(txt);
            const b = Array.isArray(j.builds) ? j.builds[0] : j;
            url = (b && (b.webUrl || b.buildUrl || b.logsUrl)) || '';
          } catch (e) {
            console.error('‚ùå Parse error:', e.message);
          }
          console.log('EAS build page:', url || '(not found)');
          fs.writeFileSync('eas-build-url.txt', (url || '').trim());
          fs.writeFileSync('README.txt', url ? `Open this URL for the QR code:\n${url}\n` : 'Build failed or URL not found.\n');
          NODE

      - name: Install QR tool
        run: npm install -g qrcode-terminal

      - name: Print QR in logs
        if: always()
        run: |
          if [ -s eas-build-url.txt ]; then
            URL="$(cat eas-build-url.txt)"
            echo "üîó $URL"
            qrcode-terminal "$URL"
          else
            echo "‚ö†Ô∏è No EAS URL found; skipping QR."
            echo "Tip: Check the 'eas-build.json' artifact for error details."
          fi

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: eas-android-internal-build
          path: |
            eas-build.json
            eas-build-url.txt
            README.txt
